{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\nclass ApiService {\n  constructor() {\n    this.axios = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Request interceptor\n    this.axios.interceptors.request.use(config => {\n      var _config$method;\n      console.log('API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Response interceptor\n    this.axios.interceptors.response.use(response => {\n      return response.data;\n    }, error => {\n      var _error$response;\n      console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    });\n  }\n\n  // Webhook endpoint for Dialogflow\n  async sendMessage(messageData) {\n    try {\n      const response = await this.axios.post('/webhook', messageData);\n      return response;\n    } catch (error) {\n      throw new Error('Failed to send message');\n    }\n  }\n\n  // Product endpoints\n  async searchProducts(params) {\n    try {\n      const response = await this.axios.get('/products', {\n        params\n      });\n      return response;\n    } catch (error) {\n      throw new Error('Failed to search products');\n    }\n  }\n  async getProduct(productId) {\n    try {\n      const response = await this.axios.get(`/products/${productId}`);\n      return response;\n    } catch (error) {\n      throw new Error('Failed to get product details');\n    }\n  }\n\n  // Order endpoints\n  async createOrder(orderData) {\n    try {\n      const response = await this.axios.post('/orders', orderData);\n      return response;\n    } catch (error) {\n      throw new Error('Failed to create order');\n    }\n  }\n  async getOrderStatus(orderId) {\n    try {\n      const response = await this.axios.get(`/orders/${orderId}/status`);\n      return response;\n    } catch (error) {\n      throw new Error('Failed to get order status');\n    }\n  }\n\n  // Recommendation endpoints\n  async getRecommendations(userId, params = {}) {\n    try {\n      const response = await this.axios.get(`/recommendations/${userId}`, {\n        params\n      });\n      return response;\n    } catch (error) {\n      throw new Error('Failed to get recommendations');\n    }\n  }\n\n  // Analytics\n  async trackInteraction(interactionData) {\n    try {\n      await this.axios.post('/analytics/interaction', interactionData);\n    } catch (error) {\n      console.error('Failed to track interaction:', error);\n    }\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","data","_error$response","message","sendMessage","messageData","post","Error","searchProducts","params","get","getProduct","productId","createOrder","orderData","getOrderStatus","orderId","getRecommendations","userId","trackInteraction","interactionData"],"sources":["C:/Users/ISWARY/Downloads/n/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.axios = axios.create({\r\n      baseURL: API_BASE_URL,\r\n      timeout: 10000,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    // Request interceptor\r\n    this.axios.interceptors.request.use(\r\n      (config) => {\r\n        console.log('API Request:', config.method?.toUpperCase(), config.url);\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Response interceptor\r\n    this.axios.interceptors.response.use(\r\n      (response) => {\r\n        return response.data;\r\n      },\r\n      (error) => {\r\n        console.error('API Error:', error.response?.data || error.message);\r\n        throw error;\r\n      }\r\n    );\r\n  }\r\n\r\n  // Webhook endpoint for Dialogflow\r\n  async sendMessage(messageData) {\r\n    try {\r\n      const response = await this.axios.post('/webhook', messageData);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Failed to send message');\r\n    }\r\n  }\r\n\r\n  // Product endpoints\r\n  async searchProducts(params) {\r\n    try {\r\n      const response = await this.axios.get('/products', { params });\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Failed to search products');\r\n    }\r\n  }\r\n\r\n  async getProduct(productId) {\r\n    try {\r\n      const response = await this.axios.get(`/products/${productId}`);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Failed to get product details');\r\n    }\r\n  }\r\n\r\n  // Order endpoints\r\n  async createOrder(orderData) {\r\n    try {\r\n      const response = await this.axios.post('/orders', orderData);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Failed to create order');\r\n    }\r\n  }\r\n\r\n  async getOrderStatus(orderId) {\r\n    try {\r\n      const response = await this.axios.get(`/orders/${orderId}/status`);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Failed to get order status');\r\n    }\r\n  }\r\n\r\n  // Recommendation endpoints\r\n  async getRecommendations(userId, params = {}) {\r\n    try {\r\n      const response = await this.axios.get(`/recommendations/${userId}`, { params });\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Failed to get recommendations');\r\n    }\r\n  }\r\n\r\n  // Analytics\r\n  async trackInteraction(interactionData) {\r\n    try {\r\n      await this.axios.post('/analytics/interaction', interactionData);\r\n    } catch (error) {\r\n      console.error('Failed to track interaction:', error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ApiService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}