{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISWARY\\\\Downloads\\\\n\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react'; // Import useEffect\nimport axios from 'axios'; // Import axios\n\n// Define your API base URL. Make sure this matches your backend.\n// It's good practice to get this from environment variables (e.g., process.env.REACT_APP_API_BASE_URL)\n// For now, hardcode it to your backend's API health check base.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:7654/api'; // Adjust if your backend API path changes\n\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true); // Add loading state for initial check\n\n  // Check for existing token/user in localStorage on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('meesho_token');\n    const storedUser = localStorage.getItem('meesho_user');\n    if (token && storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n        setIsAuthenticated(true);\n      } catch (e) {\n        console.error(\"Failed to parse stored user data:\", e);\n        // Clear invalid data\n        localStorage.removeItem('meesho_token');\n        localStorage.removeItem('meesho_user');\n      }\n    }\n    setLoading(false); // Authentication check is complete\n  }, []); // Run only once on mount\n\n  const login = async (email, password) => {\n    setLoading(true); // Set loading to true during login attempt\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n        setUser(user);\n        setIsAuthenticated(true);\n        localStorage.setItem('meesho_token', token);\n        localStorage.setItem('meesho_user', JSON.stringify(user));\n        setLoading(false); // Set loading to false on success\n        return {\n          success: true\n        };\n      }\n      setLoading(false); // Set loading to false on failure\n      return {\n        success: false,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setLoading(false); // Set loading to false on error\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const signup = async (name, email, password) => {\n    setLoading(true); // Set loading to true during signup attempt\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/signup`, {\n        name,\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n        setUser(user);\n        setIsAuthenticated(true);\n        localStorage.setItem('meesho_token', token);\n        localStorage.setItem('meesho_user', JSON.stringify(user));\n        setLoading(false); // Set loading to false on success\n        return {\n          success: true\n        };\n      }\n      setLoading(false); // Set loading to false on failure\n      return {\n        success: false,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setLoading(false); // Set loading to false on error\n      console.error('Signup error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Signup failed'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('meesho_token');\n    localStorage.removeItem('meesho_user');\n    // setLoading(false); // Depending on your app, you might reset loading here or let it be handled by re-render\n  };\n\n  // The value object provided to consumers of this context\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    // Include loading in the context value\n    login,\n    signup,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","storedUser","JSON","parse","e","console","error","removeItem","login","email","password","response","post","data","success","setItem","stringify","message","_error$response","_error$response$data","signup","name","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ISWARY/Downloads/n/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react'; // Import useEffect\r\nimport axios from 'axios'; // Import axios\r\n\r\n// Define your API base URL. Make sure this matches your backend.\r\n// It's good practice to get this from environment variables (e.g., process.env.REACT_APP_API_BASE_URL)\r\n// For now, hardcode it to your backend's API health check base.\r\nconst API_BASE_URL = 'http://localhost:7654/api'; // Adjust if your backend API path changes\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true); // Add loading state for initial check\r\n\r\n  // Check for existing token/user in localStorage on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('meesho_token');\r\n    const storedUser = localStorage.getItem('meesho_user');\r\n\r\n    if (token && storedUser) {\r\n      try {\r\n        setUser(JSON.parse(storedUser));\r\n        setIsAuthenticated(true);\r\n      } catch (e) {\r\n        console.error(\"Failed to parse stored user data:\", e);\r\n        // Clear invalid data\r\n        localStorage.removeItem('meesho_token');\r\n        localStorage.removeItem('meesho_user');\r\n      }\r\n    }\r\n    setLoading(false); // Authentication check is complete\r\n  }, []); // Run only once on mount\r\n\r\n  const login = async (email, password) => {\r\n    setLoading(true); // Set loading to true during login attempt\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        const { token, user } = response.data;\r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n        localStorage.setItem('meesho_token', token);\r\n        localStorage.setItem('meesho_user', JSON.stringify(user));\r\n        setLoading(false); // Set loading to false on success\r\n        return { success: true };\r\n      }\r\n\r\n      setLoading(false); // Set loading to false on failure\r\n      return { success: false, message: response.data.message };\r\n    } catch (error) {\r\n      setLoading(false); // Set loading to false on error\r\n      console.error('Login error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const signup = async (name, email, password) => {\r\n    setLoading(true); // Set loading to true during signup attempt\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/signup`, {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        const { token, user } = response.data;\r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n        localStorage.setItem('meesho_token', token);\r\n        localStorage.setItem('meesho_user', JSON.stringify(user));\r\n        setLoading(false); // Set loading to false on success\r\n        return { success: true };\r\n      }\r\n\r\n      setLoading(false); // Set loading to false on failure\r\n      return { success: false, message: response.data.message };\r\n    } catch (error) {\r\n      setLoading(false); // Set loading to false on error\r\n      console.error('Signup error:', error);\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.message || 'Signup failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('meesho_token');\r\n    localStorage.removeItem('meesho_user');\r\n    // setLoading(false); // Depending on your app, you might reset loading here or let it be handled by re-render\r\n  };\r\n\r\n  // The value object provided to consumers of this context\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading, // Include loading in the context value\r\n    login,\r\n    signup,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {/* Only render children when loading is complete to avoid flicker/errors */}\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}