{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISWARY\\\\Downloads\\\\project\\\\frontend\\\\src\\\\components\\\\VoiceToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './VoiceToggle.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VoiceToggle = ({\n  onVoiceResult,\n  onVoiceModeChange,\n  disabled\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [recognition, setRecognition] = useState(null);\n  const [isSupported, setIsSupported] = useState(false);\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognitionInstance = new SpeechRecognition();\n      recognitionInstance.continuous = false;\n      recognitionInstance.interimResults = false;\n      recognitionInstance.lang = 'en-US';\n      recognitionInstance.onstart = () => {\n        setIsListening(true);\n        onVoiceModeChange(true);\n      };\n      recognitionInstance.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        console.log('Voice recognition result:', transcript);\n        onVoiceResult(transcript);\n      };\n      recognitionInstance.onend = () => {\n        setIsListening(false);\n        onVoiceModeChange(false);\n      };\n      recognitionInstance.onerror = event => {\n        console.error('Voice recognition error:', event.error);\n        setIsListening(false);\n        onVoiceModeChange(false);\n      };\n      setRecognition(recognitionInstance);\n      setIsSupported(true);\n    } else {\n      setIsSupported(false);\n    }\n  }, [onVoiceResult, onVoiceModeChange]);\n  const toggleListening = () => {\n    if (!recognition || disabled) return;\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n    }\n  };\n  if (!isSupported) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-toggle unsupported\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83D\\uDEAB Voice not supported\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-toggle\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleListening,\n      disabled: disabled,\n      className: `voice-btn ${isListening ? 'listening' : ''}`,\n      title: isListening ? 'Stop listening' : 'Start voice input',\n      children: isListening ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pulse-ring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \"\\uD83C\\uDF99\\uFE0F Listening...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\uD83C\\uDFA4 Voice\"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-hint\",\n      children: isListening ? 'Speak now...' : 'Click to use voice'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceToggle, \"q0DrUzgcABKOBLThupslGm5lFmE=\");\n_c = VoiceToggle;\nexport default VoiceToggle;\nvar _c;\n$RefreshReg$(_c, \"VoiceToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","VoiceToggle","onVoiceResult","onVoiceModeChange","disabled","_s","isListening","setIsListening","recognition","setRecognition","isSupported","setIsSupported","window","SpeechRecognition","webkitSpeechRecognition","recognitionInstance","continuous","interimResults","lang","onstart","onresult","event","transcript","results","console","log","onend","onerror","error","toggleListening","stop","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/ISWARY/Downloads/project/frontend/src/components/VoiceToggle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './VoiceToggle.css';\r\n\r\nconst VoiceToggle = ({ onVoiceResult, onVoiceModeChange, disabled }) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [recognition, setRecognition] = useState(null);\r\n  const [isSupported, setIsSupported] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      const recognitionInstance = new SpeechRecognition();\r\n      \r\n      recognitionInstance.continuous = false;\r\n      recognitionInstance.interimResults = false;\r\n      recognitionInstance.lang = 'en-US';\r\n\r\n      recognitionInstance.onstart = () => {\r\n        setIsListening(true);\r\n        onVoiceModeChange(true);\r\n      };\r\n\r\n      recognitionInstance.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        console.log('Voice recognition result:', transcript);\r\n        onVoiceResult(transcript);\r\n      };\r\n\r\n      recognitionInstance.onend = () => {\r\n        setIsListening(false);\r\n        onVoiceModeChange(false);\r\n      };\r\n\r\n      recognitionInstance.onerror = (event) => {\r\n        console.error('Voice recognition error:', event.error);\r\n        setIsListening(false);\r\n        onVoiceModeChange(false);\r\n      };\r\n\r\n      setRecognition(recognitionInstance);\r\n      setIsSupported(true);\r\n    } else {\r\n      setIsSupported(false);\r\n    }\r\n  }, [onVoiceResult, onVoiceModeChange]);\r\n\r\n  const toggleListening = () => {\r\n    if (!recognition || disabled) return;\r\n\r\n    if (isListening) {\r\n      recognition.stop();\r\n    } else {\r\n      recognition.start();\r\n    }\r\n  };\r\n\r\n  if (!isSupported) {\r\n    return (\r\n      <div className=\"voice-toggle unsupported\">\r\n        <span>üö´ Voice not supported</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"voice-toggle\">\r\n      <button\r\n        onClick={toggleListening}\r\n        disabled={disabled}\r\n        className={`voice-btn ${isListening ? 'listening' : ''}`}\r\n        title={isListening ? 'Stop listening' : 'Start voice input'}\r\n      >\r\n        {isListening ? (\r\n          <>\r\n            <span className=\"pulse-ring\"></span>\r\n            üéôÔ∏è Listening...\r\n          </>\r\n        ) : (\r\n          <>\r\n            üé§ Voice\r\n          </>\r\n        )}\r\n      </button>\r\n      <div className=\"voice-hint\">\r\n        {isListening ? 'Speak now...' : 'Click to use voice'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceToggle;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}