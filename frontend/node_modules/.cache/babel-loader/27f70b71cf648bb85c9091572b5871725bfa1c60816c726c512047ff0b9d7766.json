{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISWARY\\\\Downloads\\\\n\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { CartProvider } from './context/CartContext';\nimport { AuthProvider } from './context/AuthContext';\nimport Navbar from './components/Navbar';\nimport HomePage from './pages/HomePage';\nimport ProductsPage from './pages/ProductsPage';\nimport CartPage from './pages/CartPage';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\nimport Chatbot from './components/Chatbot';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(CartProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main-content\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/products\",\n              element: /*#__PURE__*/_jsxDEV(ProductsPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/cart\",\n              element: /*#__PURE__*/_jsxDEV(CartPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              element: /*#__PURE__*/_jsxDEV(SignupPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-widget\",\n          children: [isChatOpen && /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chatbot-toggle-button\",\n            onClick: () => setIsChatOpen(!isChatOpen),\n            children: isChatOpen ? '‚úñÔ∏è' : 'üí¨'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1RwI3Rpum6EBbUdSXPo/Ywgstjs=\");\n_c = App;\nexport default App;\n//         text: 'Sorry, I could not connect to the server. Please make sure the backend is running on http://localhost:3000',\n//         sender: 'bot',\n//         timestamp: new Date(),\n//         isError: true\n//       };\n//       setMessages(prev => [...prev, errorMessage]);\n//     }\n\n//     setLoading(false);\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === 'Enter') {\n//       sendMessage();\n//     }\n//   };\n\n//   const quickReplies = ['Find products', 'Track my order', 'Get recommendations'];\n\n//   const handleQuickReply = (reply) => {\n//     setMessage(reply);\n//     // Use a callback in setState to ensure the message is updated before sending\n//     setMessage(reply, () => {\n//       sendMessage();\n//     });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"chat-container\">\n//         <div className=\"chat-header\">\n//           <h1>üõçÔ∏è Meesho Shopping Assistant</h1>\n//           <p>Your AI-powered shopping companion</p>\n//           <div className=\"status-indicator\">\n//             <span className=\"status-dot\"></span>\n//             Online\n//           </div>\n//         </div>\n\n//         <div className=\"messages-container\">\n//           {messages.map((msg) => (\n//             <div key={msg.id} className={`message ${msg.sender}`}>\n//               <div className={`message-content ${msg.isError ? 'error' : ''}`}>\n//                 {msg.text}\n//               </div>\n//               <div className=\"message-time\">\n//                 {msg.timestamp.toLocaleTimeString()}\n//               </div>\n//             </div>\n//           ))}\n\n//           {loading && (\n//             <div className=\"message bot\">\n//               <div className=\"message-content\">\n//                 <div className=\"typing-indicator\">\n//                   <span></span>\n//                   <span></span>\n//                   <span></span>\n//                 </div>\n//               </div>\n//             </div>\n//           )}\n\n//           {messages.length === 1 && (\n//             <div className=\"quick-replies\">\n//               <p>Try these options:</p>\n//               <div className=\"quick-replies-buttons\">\n//                 {quickReplies.map((reply, index) => (\n//                   <button \n//                     key={index}\n//                     onClick={() => handleQuickReply(reply)}\n//                     className=\"quick-reply-btn\"\n//                   >\n//                     {reply}\n//                   </button>\n//                 ))}\n//               </div>\n//             </div>\n//           )}\n//         </div>\n\n//         <div className=\"input-container\">\n//           <input\n//             type=\"text\"\n//             value={message}\n//             onChange={(e) => setMessage(e.target.value)}\n//             onKeyPress={handleKeyPress}\n//             placeholder=\"Type your message here...\"\n//             disabled={loading}\n//           />\n//           <button onClick={sendMessage} disabled={loading || !message.trim()}>\n//             {loading ? '...' : 'Send'}\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n//export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","CartProvider","AuthProvider","Navbar","HomePage","ProductsPage","CartPage","LoginPage","SignupPage","Chatbot","jsxDEV","_jsxDEV","App","_s","isChatOpen","setIsChatOpen","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ISWARY/Downloads/n/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { CartProvider } from './context/CartContext';\r\nimport { AuthProvider } from './context/AuthContext';\r\nimport Navbar from './components/Navbar';\r\nimport HomePage from './pages/HomePage';\r\nimport ProductsPage from './pages/ProductsPage';\r\nimport CartPage from './pages/CartPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport SignupPage from './pages/SignupPage';\r\nimport Chatbot from './components/Chatbot';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <CartProvider>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <main className=\"main-content\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<HomePage />} />\r\n              <Route path=\"/products\" element={<ProductsPage />} />\r\n              <Route path=\"/cart\" element={<CartPage />} />\r\n              <Route path=\"/login\" element={<LoginPage />} />\r\n              <Route path=\"/signup\" element={<SignupPage />} />\r\n            </Routes>\r\n          </main>\r\n\r\n          {/* Chatbot Widget Integration */}\r\n          <div className=\"chatbot-widget\">\r\n            {/* Render Chatbot component only when isChatOpen is true */}\r\n            {isChatOpen && <Chatbot />}\r\n            <button\r\n              className=\"chatbot-toggle-button\"\r\n              onClick={() => setIsChatOpen(!isChatOpen)}\r\n            >\r\n              {isChatOpen ? '‚úñÔ∏è' : 'üí¨'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </CartProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n//         text: 'Sorry, I could not connect to the server. Please make sure the backend is running on http://localhost:3000',\r\n//         sender: 'bot',\r\n//         timestamp: new Date(),\r\n//         isError: true\r\n//       };\r\n//       setMessages(prev => [...prev, errorMessage]);\r\n//     }\r\n\r\n//     setLoading(false);\r\n//   };\r\n\r\n//   const handleKeyPress = (e) => {\r\n//     if (e.key === 'Enter') {\r\n//       sendMessage();\r\n//     }\r\n//   };\r\n\r\n//   const quickReplies = ['Find products', 'Track my order', 'Get recommendations'];\r\n\r\n//   const handleQuickReply = (reply) => {\r\n//     setMessage(reply);\r\n//     // Use a callback in setState to ensure the message is updated before sending\r\n//     setMessage(reply, () => {\r\n//       sendMessage();\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className=\"chat-container\">\r\n//         <div className=\"chat-header\">\r\n//           <h1>üõçÔ∏è Meesho Shopping Assistant</h1>\r\n//           <p>Your AI-powered shopping companion</p>\r\n//           <div className=\"status-indicator\">\r\n//             <span className=\"status-dot\"></span>\r\n//             Online\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"messages-container\">\r\n//           {messages.map((msg) => (\r\n//             <div key={msg.id} className={`message ${msg.sender}`}>\r\n//               <div className={`message-content ${msg.isError ? 'error' : ''}`}>\r\n//                 {msg.text}\r\n//               </div>\r\n//               <div className=\"message-time\">\r\n//                 {msg.timestamp.toLocaleTimeString()}\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n          \r\n//           {loading && (\r\n//             <div className=\"message bot\">\r\n//               <div className=\"message-content\">\r\n//                 <div className=\"typing-indicator\">\r\n//                   <span></span>\r\n//                   <span></span>\r\n//                   <span></span>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n\r\n//           {messages.length === 1 && (\r\n//             <div className=\"quick-replies\">\r\n//               <p>Try these options:</p>\r\n//               <div className=\"quick-replies-buttons\">\r\n//                 {quickReplies.map((reply, index) => (\r\n//                   <button \r\n//                     key={index}\r\n//                     onClick={() => handleQuickReply(reply)}\r\n//                     className=\"quick-reply-btn\"\r\n//                   >\r\n//                     {reply}\r\n//                   </button>\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"input-container\">\r\n//           <input\r\n//             type=\"text\"\r\n//             value={message}\r\n//             onChange={(e) => setMessage(e.target.value)}\r\n//             onKeyPress={handleKeyPress}\r\n//             placeholder=\"Type your message here...\"\r\n//             disabled={loading}\r\n//           />\r\n//           <button onClick={sendMessage} disabled={loading || !message.trim()}>\r\n//             {loading ? '...' : 'Send'}\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n//export default App;\r\n"],"mappings":"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;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEnB;AAACR,EAAA,CAjCQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAmCZ,eAAeA,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}