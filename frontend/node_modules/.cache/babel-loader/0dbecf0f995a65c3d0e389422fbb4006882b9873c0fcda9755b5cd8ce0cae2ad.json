{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISWARY\\\\Downloads\\\\n\\\\frontend\\\\src\\\\components\\\\ProductCard.js\";\nimport React from 'react';\nimport { Card, CardMedia, CardContent, CardActions, Typography, Button, Box, Chip, Rating } from '@mui/material';\nimport { ShoppingCart, Visibility } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCard = ({\n  card,\n  onAction\n}) => {\n  var _card$buttons;\n  const handleAction = postback => {\n    if (postback.startsWith('product_details_')) {\n      const productId = postback.replace('product_details_', '');\n      onAction(`Show me details for product ${productId}`);\n    } else if (postback.startsWith('add_to_cart_')) {\n      const productId = postback.replace('add_to_cart_', '');\n      onAction(`Add product ${productId} to cart`);\n    }\n  };\n\n  // Parse price and rating from subtitle\n  const parseSubtitle = subtitle => {\n    const parts = subtitle.split(' - ');\n    const price = parts[0];\n    const brand = parts[1] || '';\n    return {\n      price,\n      brand\n    };\n  };\n  const {\n    price,\n    brand\n  } = parseSubtitle(card.subtitle || '');\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 300,\n      margin: '8px 0',\n      borderRadius: 2,\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n      transition: 'transform 0.2s',\n      '&:hover': {\n        transform: 'translateY(-2px)',\n        boxShadow: '0 4px 16px rgba(0,0,0,0.15)'\n      }\n    },\n    children: [card.imageUri && /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      height: \"180\",\n      image: card.imageUri,\n      alt: card.title,\n      sx: {\n        objectFit: 'cover'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        pb: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h3\",\n        sx: {\n          fontWeight: 600,\n          fontSize: '1rem',\n          lineHeight: 1.3,\n          mb: 1\n        },\n        children: card.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1,\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          sx: {\n            fontWeight: 700\n          },\n          children: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), brand && /*#__PURE__*/_jsxDEV(Chip, {\n          label: brand,\n          size: \"small\",\n          variant: \"outlined\",\n          sx: {\n            fontSize: '0.7rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Rating, {\n          value: 4.2,\n          precision: 0.1,\n          size: \"small\",\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: \"(4.2)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      sx: {\n        pt: 0,\n        px: 2,\n        pb: 2\n      },\n      children: (_card$buttons = card.buttons) === null || _card$buttons === void 0 ? void 0 : _card$buttons.map((button, index) => /*#__PURE__*/_jsxDEV(Button, {\n        variant: button.text.includes('Add') ? 'contained' : 'outlined',\n        size: \"small\",\n        startIcon: button.text.includes('Add') ? /*#__PURE__*/_jsxDEV(ShoppingCart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 64\n        }, this),\n        onClick: () => handleAction(button.postback),\n        sx: {\n          borderRadius: 20,\n          textTransform: 'none',\n          fontSize: '0.8rem'\n        },\n        children: button.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = ProductCard;\nexport default ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["React","Card","CardMedia","CardContent","CardActions","Typography","Button","Box","Chip","Rating","ShoppingCart","Visibility","jsxDEV","_jsxDEV","ProductCard","card","onAction","_card$buttons","handleAction","postback","startsWith","productId","replace","parseSubtitle","subtitle","parts","split","price","brand","sx","maxWidth","margin","borderRadius","boxShadow","transition","transform","children","imageUri","component","height","image","alt","title","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","pb","variant","fontWeight","fontSize","lineHeight","mb","display","alignItems","gap","color","label","size","value","precision","readOnly","pt","px","buttons","map","button","index","text","includes","startIcon","onClick","textTransform","_c","$RefreshReg$"],"sources":["C:/Users/ISWARY/Downloads/n/frontend/src/components/ProductCard.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  Chip,\r\n  Rating\r\n} from '@mui/material';\r\nimport { ShoppingCart, Visibility } from '@mui/icons-material';\r\n\r\nconst ProductCard = ({ card, onAction }) => {\r\n  const handleAction = (postback) => {\r\n    if (postback.startsWith('product_details_')) {\r\n      const productId = postback.replace('product_details_', '');\r\n      onAction(`Show me details for product ${productId}`);\r\n    } else if (postback.startsWith('add_to_cart_')) {\r\n      const productId = postback.replace('add_to_cart_', '');\r\n      onAction(`Add product ${productId} to cart`);\r\n    }\r\n  };\r\n\r\n  // Parse price and rating from subtitle\r\n  const parseSubtitle = (subtitle) => {\r\n    const parts = subtitle.split(' - ');\r\n    const price = parts[0];\r\n    const brand = parts[1] || '';\r\n    return { price, brand };\r\n  };\r\n\r\n  const { price, brand } = parseSubtitle(card.subtitle || '');\r\n\r\n  return (\r\n    <Card \r\n      sx={{ \r\n        maxWidth: 300, \r\n        margin: '8px 0',\r\n        borderRadius: 2,\r\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n        transition: 'transform 0.2s',\r\n        '&:hover': {\r\n          transform: 'translateY(-2px)',\r\n          boxShadow: '0 4px 16px rgba(0,0,0,0.15)'\r\n        }\r\n      }}\r\n    >\r\n      {card.imageUri && (\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"180\"\r\n          image={card.imageUri}\r\n          alt={card.title}\r\n          sx={{ objectFit: 'cover' }}\r\n        />\r\n      )}\r\n      \r\n      <CardContent sx={{ pb: 1 }}>\r\n        <Typography \r\n          variant=\"h6\" \r\n          component=\"h3\"\r\n          sx={{ \r\n            fontWeight: 600,\r\n            fontSize: '1rem',\r\n            lineHeight: 1.3,\r\n            mb: 1\r\n          }}\r\n        >\r\n          {card.title}\r\n        </Typography>\r\n        \r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\r\n          <Typography \r\n            variant=\"h6\" \r\n            color=\"primary\"\r\n            sx={{ fontWeight: 700 }}\r\n          >\r\n            {price}\r\n          </Typography>\r\n          {brand && (\r\n            <Chip \r\n              label={brand} \r\n              size=\"small\" \r\n              variant=\"outlined\"\r\n              sx={{ fontSize: '0.7rem' }}\r\n            />\r\n          )}\r\n        </Box>\r\n\r\n        {/* Mock rating */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Rating value={4.2} precision={0.1} size=\"small\" readOnly />\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            (4.2)\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n\r\n      <CardActions sx={{ pt: 0, px: 2, pb: 2 }}>\r\n        {card.buttons?.map((button, index) => (\r\n          <Button\r\n            key={index}\r\n            variant={button.text.includes('Add') ? 'contained' : 'outlined'}\r\n            size=\"small\"\r\n            startIcon={\r\n              button.text.includes('Add') ? <ShoppingCart /> : <Visibility />\r\n            }\r\n            onClick={() => handleAction(button.postback)}\r\n            sx={{ \r\n              borderRadius: 20,\r\n              textTransform: 'none',\r\n              fontSize: '0.8rem'\r\n            }}\r\n          >\r\n            {button.text}\r\n          </Button>\r\n        ))}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}