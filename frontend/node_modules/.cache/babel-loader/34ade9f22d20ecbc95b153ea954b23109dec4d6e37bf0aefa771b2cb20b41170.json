{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISWARY\\\\Downloads\\\\n\\\\frontend\\\\src\\\\components\\\\ProductCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useCart } from '../context/CartContext';\nimport './ProductCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCard = ({\n  product\n}) => {\n  _s();\n  const {\n    addToCart\n  } = useCart();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: product.image,\n      alt: product.name,\n      className: \"product-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"product-name\",\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"product-price\",\n        children: [\"\\u20B9\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-to-cart-btn\",\n      onClick: () => addToCart(product),\n      children: \"Add to Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductCard, \"YPx5musMedcmtt2OkzMtHcKllYw=\", false, function () {\n  return [useCart];\n});\n_c = ProductCard;\nexport default ProductCard;\n\n//       onAction(`Show me details for product ${productId}`);\n//     } else if (postback.startsWith('add_to_cart_')) {\n//       const productId = postback.replace('add_to_cart_', '');\n//       onAction(`Add product ${productId} to cart`);\n//     }\n//   };\n\n//   // Parse price and rating from subtitle\n//   const parseSubtitle = (subtitle) => {\n//     const parts = subtitle.split(' - ');\n//     const price = parts[0];\n//     const brand = parts[1] || '';\n//     return { price, brand };\n//   };\n\n//   const { price, brand } = parseSubtitle(card.subtitle || '');\n\n//   return (\n//     <Card \n//       sx={{ \n//         maxWidth: 300, \n//         margin: '8px 0',\n//         borderRadius: 2,\n//         boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n//         transition: 'transform 0.2s',\n//         '&:hover': {\n//           transform: 'translateY(-2px)',\n//           boxShadow: '0 4px 16px rgba(0,0,0,0.15)'\n//         }\n//       }}\n//     >\n//       {card.imageUri && (\n//         <CardMedia\n//           component=\"img\"\n//           height=\"180\"\n//           image={card.imageUri}\n//           alt={card.title}\n//           sx={{ objectFit: 'cover' }}\n//         />\n//       )}\n\n//       <CardContent sx={{ pb: 1 }}>\n//         <Typography \n//           variant=\"h6\" \n//           component=\"h3\"\n//           sx={{ \n//             fontWeight: 600,\n//             fontSize: '1rem',\n//             lineHeight: 1.3,\n//             mb: 1\n//           }}\n//         >\n//           {card.title}\n//         </Typography>\n\n//         <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n//           <Typography \n//             variant=\"h6\" \n//             color=\"primary\"\n//             sx={{ fontWeight: 700 }}\n//           >\n//             {price}\n//           </Typography>\n//           {brand && (\n//             <Chip \n//               label={brand} \n//               size=\"small\" \n//               variant=\"outlined\"\n//               sx={{ fontSize: '0.7rem' }}\n//             />\n//           )}\n//         </Box>\n\n//         {/* Mock rating */}\n//         <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n//           <Rating value={4.2} precision={0.1} size=\"small\" readOnly />\n//           <Typography variant=\"caption\" color=\"text.secondary\">\n//             (4.2)\n//           </Typography>\n//         </Box>\n//       </CardContent>\n\n//       <CardActions sx={{ pt: 0, px: 2, pb: 2 }}>\n//         {card.buttons?.map((button, index) => (\n//           <Button\n//             key={index}\n//             variant={button.text.includes('Add') ? 'contained' : 'outlined'}\n//             size=\"small\"\n//             startIcon={\n//               button.text.includes('Add') ? <ShoppingCart /> : <Visibility />\n//             }\n//             onClick={() => handleAction(button.postback)}\n//             sx={{ \n//               borderRadius: 20,\n//               textTransform: 'none',\n//               fontSize: '0.8rem'\n//             }}\n//           >\n//             {button.text}\n//           </Button>\n//         ))}\n//       </CardActions>\n//     </Card>\n//   );\n// };\n\n//export default ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["React","useCart","jsxDEV","_jsxDEV","ProductCard","product","_s","addToCart","className","children","src","image","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","price","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ISWARY/Downloads/n/frontend/src/components/ProductCard.js"],"sourcesContent":["import React from 'react';\r\nimport { useCart } from '../context/CartContext';\r\nimport './ProductCard.css';\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const { addToCart } = useCart();\r\n\r\n  return (\r\n    <div className=\"product-card\">\r\n      <img src={product.image} alt={product.name} className=\"product-image\" />\r\n      <div className=\"product-info\">\r\n        <h3 className=\"product-name\">{product.name}</h3>\r\n        <p className=\"product-price\">â‚¹{product.price}</p>\r\n      </div>\r\n      <button className=\"add-to-cart-btn\" onClick={() => addToCart(product)}>\r\n        Add to Cart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n\r\n//       onAction(`Show me details for product ${productId}`);\r\n//     } else if (postback.startsWith('add_to_cart_')) {\r\n//       const productId = postback.replace('add_to_cart_', '');\r\n//       onAction(`Add product ${productId} to cart`);\r\n//     }\r\n//   };\r\n\r\n//   // Parse price and rating from subtitle\r\n//   const parseSubtitle = (subtitle) => {\r\n//     const parts = subtitle.split(' - ');\r\n//     const price = parts[0];\r\n//     const brand = parts[1] || '';\r\n//     return { price, brand };\r\n//   };\r\n\r\n//   const { price, brand } = parseSubtitle(card.subtitle || '');\r\n\r\n//   return (\r\n//     <Card \r\n//       sx={{ \r\n//         maxWidth: 300, \r\n//         margin: '8px 0',\r\n//         borderRadius: 2,\r\n//         boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n//         transition: 'transform 0.2s',\r\n//         '&:hover': {\r\n//           transform: 'translateY(-2px)',\r\n//           boxShadow: '0 4px 16px rgba(0,0,0,0.15)'\r\n//         }\r\n//       }}\r\n//     >\r\n//       {card.imageUri && (\r\n//         <CardMedia\r\n//           component=\"img\"\r\n//           height=\"180\"\r\n//           image={card.imageUri}\r\n//           alt={card.title}\r\n//           sx={{ objectFit: 'cover' }}\r\n//         />\r\n//       )}\r\n      \r\n//       <CardContent sx={{ pb: 1 }}>\r\n//         <Typography \r\n//           variant=\"h6\" \r\n//           component=\"h3\"\r\n//           sx={{ \r\n//             fontWeight: 600,\r\n//             fontSize: '1rem',\r\n//             lineHeight: 1.3,\r\n//             mb: 1\r\n//           }}\r\n//         >\r\n//           {card.title}\r\n//         </Typography>\r\n        \r\n//         <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\r\n//           <Typography \r\n//             variant=\"h6\" \r\n//             color=\"primary\"\r\n//             sx={{ fontWeight: 700 }}\r\n//           >\r\n//             {price}\r\n//           </Typography>\r\n//           {brand && (\r\n//             <Chip \r\n//               label={brand} \r\n//               size=\"small\" \r\n//               variant=\"outlined\"\r\n//               sx={{ fontSize: '0.7rem' }}\r\n//             />\r\n//           )}\r\n//         </Box>\r\n\r\n//         {/* Mock rating */}\r\n//         <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n//           <Rating value={4.2} precision={0.1} size=\"small\" readOnly />\r\n//           <Typography variant=\"caption\" color=\"text.secondary\">\r\n//             (4.2)\r\n//           </Typography>\r\n//         </Box>\r\n//       </CardContent>\r\n\r\n//       <CardActions sx={{ pt: 0, px: 2, pb: 2 }}>\r\n//         {card.buttons?.map((button, index) => (\r\n//           <Button\r\n//             key={index}\r\n//             variant={button.text.includes('Add') ? 'contained' : 'outlined'}\r\n//             size=\"small\"\r\n//             startIcon={\r\n//               button.text.includes('Add') ? <ShoppingCart /> : <Visibility />\r\n//             }\r\n//             onClick={() => handleAction(button.postback)}\r\n//             sx={{ \r\n//               borderRadius: 20,\r\n//               textTransform: 'none',\r\n//               fontSize: '0.8rem'\r\n//             }}\r\n//           >\r\n//             {button.text}\r\n//           </Button>\r\n//         ))}\r\n//       </CardActions>\r\n//     </Card>\r\n//   );\r\n// };\r\n\r\n//export default ProductCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAU,CAAC,GAAGN,OAAO,CAAC,CAAC;EAE/B,oBACEE,OAAA;IAAKK,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BN,OAAA;MAAKO,GAAG,EAAEL,OAAO,CAACM,KAAM;MAACC,GAAG,EAAEP,OAAO,CAACQ,IAAK;MAACL,SAAS,EAAC;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxEd,OAAA;MAAKK,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BN,OAAA;QAAIK,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEJ,OAAO,CAACQ;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChDd,OAAA;QAAGK,SAAS,EAAC,eAAe;QAAAC,QAAA,GAAC,QAAC,EAACJ,OAAO,CAACa,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACNd,OAAA;MAAQK,SAAS,EAAC,iBAAiB;MAACW,OAAO,EAAEA,CAAA,KAAMZ,SAAS,CAACF,OAAO,CAAE;MAAAI,QAAA,EAAC;IAEvE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACX,EAAA,CAfIF,WAAW;EAAA,QACOH,OAAO;AAAA;AAAAmB,EAAA,GADzBhB,WAAW;AAiBjB,eAAeA,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}