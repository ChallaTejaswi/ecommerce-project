{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISWARY\\\\Downloads\\\\n\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:7654/api';\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Check for existing token/user in localStorage on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('meesho_token');\n    const storedUser = localStorage.getItem('meesho_user');\n    if (token && storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (e) {\n        console.error(\"Failed to parse stored user data:\", e);\n        // Clear invalid data\n        localStorage.removeItem('meesho_token');\n        localStorage.removeItem('meesho_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      // Mock login for development (replace with real API call)\n      const mockUser = {\n        id: 'user_123',\n        name: email.split('@')[0],\n        email: email\n      };\n      const mockToken = 'mock_jwt_token_' + Date.now();\n      setUser(mockUser);\n      setIsAuthenticated(true);\n      localStorage.setItem('meesho_token', mockToken);\n      localStorage.setItem('meesho_user', JSON.stringify(mockUser));\n      setLoading(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      setLoading(false);\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: 'Login failed'\n      };\n    }\n  };\n  const signup = async (name, email, password) => {\n    setLoading(true);\n    try {\n      // Mock signup for development (replace with real API call)\n      const mockUser = {\n        id: 'user_' + Date.now(),\n        name: name,\n        email: email\n      };\n      const mockToken = 'mock_jwt_token_' + Date.now();\n      setUser(mockUser);\n      setIsAuthenticated(true);\n      localStorage.setItem('meesho_token', mockToken);\n      localStorage.setItem('meesho_user', JSON.stringify(mockUser));\n      setLoading(false);\n      return {\n        success: true\n      };\n    } catch (error) {\n      setLoading(false);\n      console.error('Signup error:', error);\n      return {\n        success: false,\n        message: 'Signup failed'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('meesho_token');\n    localStorage.removeItem('meesho_user');\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        fontSize: '18px',\n        color: '#667eea'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","storedUser","userData","JSON","parse","e","console","error","removeItem","login","email","password","mockUser","id","name","split","mockToken","Date","now","setItem","stringify","success","message","signup","logout","value","Provider","style","display","justifyContent","alignItems","height","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ISWARY/Downloads/n/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:7654/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check for existing token/user in localStorage on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('meesho_token');\r\n    const storedUser = localStorage.getItem('meesho_user');\r\n\r\n    if (token && storedUser) {\r\n      try {\r\n        const userData = JSON.parse(storedUser);\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      } catch (e) {\r\n        console.error(\"Failed to parse stored user data:\", e);\r\n        // Clear invalid data\r\n        localStorage.removeItem('meesho_token');\r\n        localStorage.removeItem('meesho_user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      // Mock login for development (replace with real API call)\r\n      const mockUser = {\r\n        id: 'user_123',\r\n        name: email.split('@')[0],\r\n        email: email\r\n      };\r\n      \r\n      const mockToken = 'mock_jwt_token_' + Date.now();\r\n      \r\n      setUser(mockUser);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('meesho_token', mockToken);\r\n      localStorage.setItem('meesho_user', JSON.stringify(mockUser));\r\n      \r\n      setLoading(false);\r\n      return { success: true };\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error('Login error:', error);\r\n      return {\r\n        success: false,\r\n        message: 'Login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const signup = async (name, email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      // Mock signup for development (replace with real API call)\r\n      const mockUser = {\r\n        id: 'user_' + Date.now(),\r\n        name: name,\r\n        email: email\r\n      };\r\n      \r\n      const mockToken = 'mock_jwt_token_' + Date.now();\r\n      \r\n      setUser(mockUser);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('meesho_token', mockToken);\r\n      localStorage.setItem('meesho_user', JSON.stringify(mockUser));\r\n      \r\n      setLoading(false);\r\n      return { success: true };\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error('Signup error:', error);\r\n      return {\r\n        success: false,\r\n        message: 'Signup failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('meesho_token');\r\n    localStorage.removeItem('meesho_user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {loading ? (\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '100vh',\r\n          fontSize: '18px',\r\n          color: '#667eea'\r\n        }}>\r\n          Loading...\r\n        </div>\r\n      ) : (\r\n        children\r\n      )}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}