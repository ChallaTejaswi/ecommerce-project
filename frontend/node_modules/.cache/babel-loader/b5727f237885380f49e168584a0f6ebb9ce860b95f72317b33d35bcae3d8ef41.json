{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISWARY\\\\Downloads\\\\n\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_WEBHOOK_URL = 'http://localhost:3000/api/webhook';\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(true);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  useEffect(() => {\n    setMessages([{\n      id: 1,\n      text: 'Hello! Welcome to Meesho Shopping Assistant. How can I help you today?',\n      sender: 'bot',\n      timestamp: new Date()\n    }]);\n\n    // Initialize speech recognition\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      setSpeechSupported(true);\n      const recognition = new SpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setMessage(transcript);\n        setTimeout(() => sendMessage(transcript), 500);\n      };\n      recognition.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n  const speakText = text => {\n    if (voiceEnabled && 'speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 0.9;\n      utterance.pitch = 1;\n      utterance.volume = 0.8;\n\n      // Try to use a female voice for the assistant\n      const voices = speechSynthesis.getVoices();\n      const femaleVoice = voices.find(voice => voice.name.toLowerCase().includes('female') || voice.name.toLowerCase().includes('samantha') || voice.name.toLowerCase().includes('karen'));\n      if (femaleVoice) {\n        utterance.voice = femaleVoice;\n      }\n      speechSynthesis.speak(utterance);\n    }\n  };\n  const sendMessage = async (textToSend = message) => {\n    if (textToSend.trim() === '') return;\n    const userMessage = {\n      id: Date.now(),\n      text: textToSend,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setMessage('');\n    setLoading(true);\n    try {\n      const response = await axios.post(BACKEND_WEBHOOK_URL, {\n        queryResult: {\n          queryText: textToSend\n        }\n      });\n      const botResponseData = response.data;\n      let botMessageText = 'I am not sure how to respond to that.';\n      if (botResponseData && botResponseData.fulfillmentText) {\n        botMessageText = botResponseData.fulfillmentText;\n      }\n      const botMessage = {\n        id: Date.now() + 1,\n        text: botMessageText,\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Speak the bot response\n      if (voiceEnabled) {\n        setTimeout(() => speakText(botMessageText), 500);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: 'Sorry, I could not connect to the server. Please make sure the backend is running.',\n        sender: 'bot',\n        timestamp: new Date(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n    setLoading(false);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  const quickReplies = ['Find products', 'Track my order', 'Get recommendations'];\n  const handleQuickReply = reply => {\n    sendMessage(reply);\n  };\n  const toggleVoiceRecognition = () => {\n    if (!speechSupported) {\n      alert('Speech recognition is not supported in your browser.');\n      return;\n    }\n    if (isListening) {\n      recognitionRef.current.stop();\n    } else {\n      recognitionRef.current.start();\n    }\n  };\n  const toggleVoiceOutput = () => {\n    setVoiceEnabled(!voiceEnabled);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDECD\\uFE0F Shopping Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `voice-toggle ${voiceEnabled ? 'active' : ''}`,\n          onClick: toggleVoiceOutput,\n          title: \"Toggle voice responses\",\n          children: \"\\uD83D\\uDD0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-content ${msg.isError ? 'error' : ''}`,\n          children: [msg.text, msg.sender === 'bot' && !msg.isError && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"speak-button\",\n            onClick: () => speakText(msg.text),\n            title: \"Speak this message\",\n            children: \"\\uD83D\\uDD0A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), messages.length > 0 && messages[messages.length - 1].sender === 'bot' && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-replies\",\n      children: quickReplies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleQuickReply(reply),\n        className: \"quick-reply-btn\",\n        children: reply\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: isListening ? \"Listening...\" : \"Type your message...\",\n        disabled: loading || isListening\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), speechSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mic-button-input ${isListening ? 'listening' : ''}`,\n        onClick: toggleVoiceRecognition,\n        title: isListening ? 'Stop listening' : 'Start voice input',\n        children: isListening ? '🔴' : '🎤'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: () => sendMessage(),\n        disabled: loading || !message.trim() || isListening,\n        children: loading ? '...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listening-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sound-wave\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Listening...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"0ihKp3E986C5t9ejGMW6W6/F3Yk=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","BACKEND_WEBHOOK_URL","Chatbot","_s","messages","setMessages","message","setMessage","loading","setLoading","isListening","setIsListening","speechSupported","setSpeechSupported","voiceEnabled","setVoiceEnabled","messagesEndRef","recognitionRef","_messagesEndRef$curre","current","scrollIntoView","behavior","id","text","sender","timestamp","Date","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onstart","onend","onresult","event","transcript","results","setTimeout","sendMessage","onerror","console","error","stop","speakText","utterance","SpeechSynthesisUtterance","rate","pitch","volume","voices","speechSynthesis","getVoices","femaleVoice","find","voice","name","toLowerCase","includes","speak","textToSend","trim","userMessage","now","prev","response","post","queryResult","queryText","botResponseData","data","botMessageText","fulfillmentText","botMessage","errorMessage","isError","handleKeyPress","e","key","quickReplies","handleQuickReply","reply","toggleVoiceRecognition","alert","start","toggleVoiceOutput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","map","msg","ref","length","index","type","value","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ISWARY/Downloads/n/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './Chatbot.css';\r\n\r\nconst BACKEND_WEBHOOK_URL = 'http://localhost:3000/api/webhook';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [speechSupported, setSpeechSupported] = useState(false);\r\n  const [voiceEnabled, setVoiceEnabled] = useState(true);\r\n  const messagesEndRef = useRef(null);\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    setMessages([\r\n      {\r\n        id: 1,\r\n        text: 'Hello! Welcome to Meesho Shopping Assistant. How can I help you today?',\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n      },\r\n    ]);\r\n\r\n    // Initialize speech recognition\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (SpeechRecognition) {\r\n      setSpeechSupported(true);\r\n      const recognition = new SpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      recognition.lang = 'en-US';\r\n\r\n      recognition.onstart = () => {\r\n        setIsListening(true);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognition.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setMessage(transcript);\r\n        setTimeout(() => sendMessage(transcript), 500);\r\n      };\r\n\r\n      recognition.onerror = (event) => {\r\n        console.error('Speech recognition error:', event.error);\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    }\r\n\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const speakText = (text) => {\r\n    if (voiceEnabled && 'speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.rate = 0.9;\r\n      utterance.pitch = 1;\r\n      utterance.volume = 0.8;\r\n      \r\n      // Try to use a female voice for the assistant\r\n      const voices = speechSynthesis.getVoices();\r\n      const femaleVoice = voices.find(voice => \r\n        voice.name.toLowerCase().includes('female') || \r\n        voice.name.toLowerCase().includes('samantha') ||\r\n        voice.name.toLowerCase().includes('karen')\r\n      );\r\n      \r\n      if (femaleVoice) {\r\n        utterance.voice = femaleVoice;\r\n      }\r\n\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (textToSend = message) => {\r\n    if (textToSend.trim() === '') return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      text: textToSend,\r\n      sender: 'user',\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setMessage('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(BACKEND_WEBHOOK_URL, {\r\n        queryResult: { queryText: textToSend }\r\n      });\r\n\r\n      const botResponseData = response.data;\r\n      let botMessageText = 'I am not sure how to respond to that.';\r\n\r\n      if (botResponseData && botResponseData.fulfillmentText) {\r\n        botMessageText = botResponseData.fulfillmentText;\r\n      }\r\n\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        text: botMessageText,\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n      };\r\n\r\n      setMessages((prev) => [...prev, botMessage]);\r\n      \r\n      // Speak the bot response\r\n      if (voiceEnabled) {\r\n        setTimeout(() => speakText(botMessageText), 500);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        text: 'Sorry, I could not connect to the server. Please make sure the backend is running.',\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n        isError: true,\r\n      };\r\n      setMessages((prev) => [...prev, errorMessage]);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const quickReplies = ['Find products', 'Track my order', 'Get recommendations'];\r\n\r\n  const handleQuickReply = (reply) => {\r\n    sendMessage(reply);\r\n  };\r\n\r\n  const toggleVoiceRecognition = () => {\r\n    if (!speechSupported) {\r\n      alert('Speech recognition is not supported in your browser.');\r\n      return;\r\n    }\r\n\r\n    if (isListening) {\r\n      recognitionRef.current.stop();\r\n    } else {\r\n      recognitionRef.current.start();\r\n    }\r\n  };\r\n\r\n  const toggleVoiceOutput = () => {\r\n    setVoiceEnabled(!voiceEnabled);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <h1>🛍️ Shopping Assistant</h1>\r\n        <div className=\"voice-controls\">\r\n          <button \r\n            className={`voice-toggle ${voiceEnabled ? 'active' : ''}`}\r\n            onClick={toggleVoiceOutput}\r\n            title=\"Toggle voice responses\"\r\n          >\r\n            🔊\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"messages-container\">\r\n        {messages.map((msg) => (\r\n          <div key={msg.id} className={`message ${msg.sender}`}>\r\n            <div className={`message-content ${msg.isError ? 'error' : ''}`}>\r\n              {msg.text}\r\n              {msg.sender === 'bot' && !msg.isError && (\r\n                <button \r\n                  className=\"speak-button\"\r\n                  onClick={() => speakText(msg.text)}\r\n                  title=\"Speak this message\"\r\n                >\r\n                  🔊\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {loading && (\r\n          <div className=\"message bot\">\r\n            <div className=\"message-content\">\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {messages.length > 0 && messages[messages.length - 1].sender === 'bot' && !loading && (\r\n        <div className=\"quick-replies\">\r\n          {quickReplies.map((reply, index) => (\r\n            <button \r\n              key={index}\r\n              onClick={() => handleQuickReply(reply)}\r\n              className=\"quick-reply-btn\"\r\n            >\r\n              {reply}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder={isListening ? \"Listening...\" : \"Type your message...\"}\r\n          disabled={loading || isListening}\r\n        />\r\n        {speechSupported && (\r\n          <button \r\n            className={`mic-button-input ${isListening ? 'listening' : ''}`}\r\n            onClick={toggleVoiceRecognition}\r\n            title={isListening ? 'Stop listening' : 'Start voice input'}\r\n          >\r\n            {isListening ? '🔴' : '🎤'}\r\n          </button>\r\n        )}\r\n        <button className=\"send-button\" onClick={() => sendMessage()} disabled={loading || !message.trim() || isListening}>\r\n          {loading ? '...' : 'Send'}\r\n        </button>\r\n      </div>\r\n\r\n      {isListening && (\r\n        <div className=\"listening-indicator\">\r\n          <div className=\"sound-wave\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          <span>Listening...</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}